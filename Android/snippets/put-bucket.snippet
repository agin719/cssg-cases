CosXmlServiceConfig serviceConfig = new CosXmlServiceConfig.Builder()
       .isHttps(true) // 设置 Https 请求
       .setRegion("ap-guangzhou") // 设置默认的存储桶地域
       .builder();

// 构建一个从临时密钥服务器拉取临时密钥的 Http 请求
HttpRequest<String> httpRequest = null;
try {
   httpRequest = new HttpRequest.Builder<String>()
           .url(new URL("your_auth_server_url"))
           .build();
} catch (MalformedURLException e) {
   e.printStackTrace();
}
QCloudCredentialProvider credentialProvider = new SessionCredentialProvider(httpRequest);
CosXmlService cosXmlService = new CosXmlService(context, serviceConfig, credentialProvider);

String bucket = "";
PutBucketRequest putBucketRequest = new PutBucketRequest(bucket);

//定义存储桶的 ACL 属性。有效值：private，public-read-write，public-read；默认值：private
putBucketRequest.setXCOSACL("private");

//赋予被授权者读的权限
ACLAccount readACLS = new ACLAccount();
readACLS.addAccount("OwnerUin", "SubUin");
putBucketRequest.setXCOSGrantRead(readACLS);

//赋予被授权者写的权限
ACLAccount writeACLS = new ACLAccount();
writeACLS.addAccount("OwnerUin", "SubUin");
putBucketRequest.setXCOSGrantRead(writeACLS);

//赋予被授权者读写的权限
ACLAccount writeandReadACLS = new ACLAccount();
writeandReadACLS.addAccount("OwnerUin", "SubUin");
putBucketRequest.setXCOSGrantRead(writeandReadACLS);
//设置签名校验Host, 默认校验所有Header
Set<String> headerKeys = new HashSet<>();
headerKeys.add("Host");
putBucketRequest.setSignParamsAndHeaders(null, headerKeys);
//使用同步方法
try {
    PutBucketResult putBucketResult = cosXmlService.putBucket(putBucketRequest);
} catch (CosXmlClientException e) {
    e.printStackTrace();
} catch (CosXmlServiceException e) {
    e.printStackTrace();
}

// 使用异步回调请求
cosXmlService.putBucketAsync(putBucketRequest, new CosXmlResultListener() {
    @Override
    public void onSuccess(CosXmlRequest request, CosXmlResult result) {
        // todo Put Bucket success
        PutBucketResult putBucketResult = (PutBucketResult)result;
    }

    @Override
    public void onFail(CosXmlRequest cosXmlRequest, CosXmlClientException clientException, CosXmlServiceException serviceException)  {
        // todo Put Bucket failed because of CosXmlClientException or CosXmlServiceException...
    }
});
