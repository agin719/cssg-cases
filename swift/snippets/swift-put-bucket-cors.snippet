let exception = XCTestExpectation.init(description: "putBucketCors exception");
let putBucketCorsReq = QCloudPutBucketCORSRequest.init();

let corsConfig = QCloudCORSConfiguration.init();

let rule = QCloudCORSRule.init();
rule.identifier = "swift-sdk";
rule.allowedHeader = ["origin","host","accept","content-type","authorization"];
rule.exposeHeader = "Etag";
rule.allowedMethod = ["GET","PUT","POST", "DELETE", "HEAD"];
rule.maxAgeSeconds = 3600;
rule.allowedOrigin = "*";

corsConfig.rules = [rule];

putBucketCorsReq.corsConfiguration = corsConfig;
putBucketCorsReq.bucket = "examplebucket-1250000000";
putBucketCorsReq.finishBlock = {(result,error) in
    if error != nil{
        print(error!);
    }else{
        print(result!);
    }
    exception .fulfill();
}

QCloudCOSXMLService.defaultCOSXML().putBucketCORS(putBucketCorsReq);
self.wait(for: [exception], timeout: 100);