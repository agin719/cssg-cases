let exception = XCTestExpectation.init(description: "putBucketReplication exception");
let putBucketReplication = QCloudPutBucketReplicationRequest.init();
putBucketReplication.bucket = "examplebucket-1250000000";

let config = QCloudBucketReplicationConfiguation.init();
config.role = "qcs::cam::uin/100000000001:uin/100000000001";

let rule = QCloudBucketReplicationRule.init();
rule.identifier = "swift";
rule.status = .enabled;

let destination = QCloudBucketReplicationDestination.init();
let destinationBucket = "destinationbucket-1250000000";
let region = "ap-beijing";
destination.bucket = "qcs::cos:\(region)::\(destinationBucket)";
rule.destination = destination;
rule.prefix = "a";

config.rule = [rule];

putBucketReplication.configuation = config;

putBucketReplication.finishBlock = {(result,error) in
        if error != nil{
            print(error!);
        }else{
            print(result!);
        }
        exception.fulfill();
}
QCloudCOSXMLService.defaultCOSXML().putBucketRelication(putBucketReplication);
self.wait(for: [exception], timeout: 100);